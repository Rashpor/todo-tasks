basePath: /
definitions:
  models.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  models.Task:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      status:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
host: localhost:8083
info:
  contact: {}
  description: API для управления задачами
  title: TODO API
  version: "1.0"
paths:
  /tasks:
    get:
      consumes:
      - application/json
      description: Возвращает массив задач, поддерживает пагинацию
      parameters:
      - default: 1
        description: Номер страницы
        in: query
        name: page
        type: integer
      - default: 10
        description: Количество задач на странице
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Task'
            type: array
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Получить список задач
      tags:
      - tasks
    post:
      consumes:
      - application/json
      description: Добавляет новую задачу в список
      parameters:
      - description: Данные новой задачи
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/models.Task'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Task'
        "400":
          description: Невалидный JSON
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Создать задачу
      tags:
      - tasks
  /tasks/{id}:
    delete:
      description: Удаляет задачу по переданному ID
      parameters:
      - description: ID задачи
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: Сообщение об успешном удалении
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Некорректный ID
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Задача не найдена
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Удалить задачу
      tags:
      - tasks
    put:
      consumes:
      - application/json
      description: Обновляет задачу по переданному ID
      parameters:
      - description: ID задачи
        in: path
        name: id
        required: true
        type: integer
      - description: Данные для обновления
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/models.Task'
      produces:
      - application/json
      responses:
        "200":
          description: Сообщение об успешном обновлении
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Некорректный ID или данные
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Задача не найдена
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Обновить задачу
      tags:
      - tasks
swagger: "2.0"
